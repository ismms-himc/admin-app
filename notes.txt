Admin-on-REST Tutorial
----------------------
  link: https://marmelab.com/admin-on-rest//Tutorial.html

  This 15 minute tutorial will expose how to create a new admin app based on an existing REST API.

Installation: Facebook's create-react-app
------------------------------------------

  Admin-on-REST uses React. We'll use Facebook's create-react-app to create an empty React app, and install the admin-on-rest package:

    >> npm install -g create-react-app
    >> create-react-app test-admin
    >> cd test-admin/
    >> yarn add admin-on-rest
    >> start

  yarn
  ***********
    Yarn is a package manager for your code. It allows you to use and share code with developers ...

  running
  --------
    Success! Created test-admin at /Users/nickfernandez/Documents/admin-on-rest-example/test-admin
    Inside that directory, you can run several commands:

      npm start
        Starts the development server.

      npm run build
        Bundles the app into static files for production.

      npm test
        Starts the test runner.

      npm run eject
        Removes this tool and copies build dependencies, configuration files
        and scripts into the app directory. If you do this, you canâ€™t go back!

    We suggest that you begin by typing:

      cd test-admin
      npm start

    Happy hacking!


  You should be up and running with an empty React application on port 3000.

Making Contact with the API
---------------------------
  We'll be using JSONPlaceholder, a fake REST API designed for testing and prototyping, as the datasource for the admin

    >> curl http://jsonplaceholder.typicode.com/posts/12

    {
      "id": 12,
      ...
    }

  JSONPlaceholder provides endpoints for posts, comments, and users. The admin we'll build will allow us to Create, Retrieve, Update, and Delete (CRUD) these resources.

  Replace the src/App.js by the following code:

    // in src/App.js
    import React from 'react';
    import { jsonServerRestClient, Admin, Resource } from 'admin-on-rest';

    import { PostList } from './posts';




